; Section 1.2
; ===========

#|
Exercise 1.9
============

Each of the following two procedures defines a method for adding two positive
integers in terms of the procedures inc, which increments its argument by 1,
and dec, which decrements its argument by 1.

(define (+ a b)
  (if (= a 0) 
      b 
      (inc (+ (dec a) b))))

(define (+ a b)
  (if (= a 0) 
      b 
      (+ (dec a) (inc b))))

Using the substitution model, illustrate the process generated by each procedure in
evaluating (+ 3 2). Are these processes iterative or recursive?

Answer
======
NB: I've cheated a bit and decreased the arguments from (+ 4 5) to (+ 2  3). I'm a busy
person.

First version
-------------
Generates a process that looks like this:

(inc (+ (dec 3) 2)
(inc (+ (dec (dec 3)) 2)
(inc (+ (dec (dec (dec 3))) 2)

This is a recursive procedure because it is storing the number of times to apply '+' to
2 in the stack.

Second version
--------------
(+ (dec 3) (inc 2))
(+ (dec (dec 3)) (inc (inc 2))
(+ (dec (dec (dec 3))) (inc (inc (inc 2)))

Even though the second version has nested dec and inc calls, this is an iterative process,
because there is no information about the state of the computation stored in the stack. 
|#



